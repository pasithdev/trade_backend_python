//@version=5
strategy("Advanced Trading Strategy Example", overlay=true, margin_long=100, margin_short=100)

// ============================================================================
// STRATEGY PARAMETERS
// ============================================================================

// Position sizing
balance_percentage = input.float(0.25, "Balance Percentage", minval=0.01, maxval=1.0, step=0.05, 
                                 tooltip="Percentage of account balance to use (0.25 = 25%)")
leverage = input.int(10, "Leverage", minval=1, maxval=125, 
                    tooltip="Leverage multiplier for futures trading")

// Strategy parameters
fast_ma_length = input.int(9, "Fast MA Length", minval=1)
slow_ma_length = input.int(21, "Slow MA Length", minval=1)

// ============================================================================
// INDICATOR CALCULATIONS
// ============================================================================

fast_ma = ta.sma(close, fast_ma_length)
slow_ma = ta.sma(close, slow_ma_length)

// Plot MAs
plot(fast_ma, "Fast MA", color=color.blue, linewidth=2)
plot(slow_ma, "Slow MA", color=color.red, linewidth=2)

// ============================================================================
// TRADING SIGNALS
// ============================================================================

// Buy signal: Fast MA crosses above Slow MA
buy_signal = ta.crossover(fast_ma, slow_ma)

// Sell signal: Fast MA crosses below Slow MA
sell_signal = ta.crossunder(fast_ma, slow_ma)

// Close signal: Optional - when position is profitable enough
// You can customize this based on your strategy
close_long_signal = sell_signal
close_short_signal = buy_signal

// ============================================================================
// WEBHOOK ALERT MESSAGES
// ============================================================================

// Buy webhook message (Long entry)
buy_message = '{"symbol": "' + syminfo.ticker + 'USDT", "action": "buy", "balance_percentage": ' + 
              str.tostring(balance_percentage) + ', "leverage": ' + str.tostring(leverage) + 
              ', "entry": ' + str.tostring(close) + '}'

// Sell webhook message (Short entry)
sell_message = '{"symbol": "' + syminfo.ticker + 'USDT", "action": "sell", "balance_percentage": ' + 
               str.tostring(balance_percentage) + ', "leverage": ' + str.tostring(leverage) + 
               ', "entry": ' + str.tostring(close) + '}'

// Close webhook message (Exit all positions)
close_message = '{"symbol": "' + syminfo.ticker + 'USDT", "action": "close", "balance_percentage": ' + 
                str.tostring(balance_percentage) + ', "leverage": ' + str.tostring(leverage) + 
                ', "entry": ' + str.tostring(close) + '}'

// ============================================================================
// STRATEGY EXECUTION (For Backtesting)
// ============================================================================

if buy_signal
    strategy.entry("Long", strategy.long, alert_message=buy_message)
    
if sell_signal
    strategy.entry("Short", strategy.short, alert_message=sell_message)

if close_long_signal and strategy.position_size > 0
    strategy.close("Long", alert_message=close_message)
    
if close_short_signal and strategy.position_size < 0
    strategy.close("Short", alert_message=close_message)

// ============================================================================
// VISUAL SIGNALS
// ============================================================================

// Plot buy/sell signals
plotshape(buy_signal, "Buy Signal", shape.triangleup, location.belowbar, 
          color.green, size=size.small)
plotshape(sell_signal, "Sell Signal", shape.triangledown, location.abovebar, 
          color.red, size=size.small)

// ============================================================================
// ALERT CONDITIONS
// ============================================================================

// Alert for buy signal
if buy_signal
    alert(buy_message, alert.freq_once_per_bar_close)

// Alert for sell signal  
if sell_signal
    alert(sell_message, alert.freq_once_per_bar_close)

// ============================================================================
// INFORMATION TABLE
// ============================================================================

// Display current settings
var table info_table = table.new(position.top_right, 2, 6, 
                                 bgcolor=color.new(color.black, 80), 
                                 border_width=1, border_color=color.gray)

if barstate.islast
    table.cell(info_table, 0, 0, "Balance %", text_color=color.white, text_size=size.small)
    table.cell(info_table, 1, 0, str.tostring(balance_percentage * 100) + "%", 
               text_color=color.yellow, text_size=size.small)
    
    table.cell(info_table, 0, 1, "Leverage", text_color=color.white, text_size=size.small)
    table.cell(info_table, 1, 1, str.tostring(leverage) + "x", 
               text_color=color.yellow, text_size=size.small)
    
    table.cell(info_table, 0, 2, "Symbol", text_color=color.white, text_size=size.small)
    table.cell(info_table, 1, 2, syminfo.ticker + "USDT", 
               text_color=color.yellow, text_size=size.small)
    
    table.cell(info_table, 0, 3, "Fast MA", text_color=color.white, text_size=size.small)
    table.cell(info_table, 1, 3, str.tostring(fast_ma, "#.##"), 
               text_color=color.blue, text_size=size.small)
    
    table.cell(info_table, 0, 4, "Slow MA", text_color=color.white, text_size=size.small)
    table.cell(info_table, 1, 4, str.tostring(slow_ma, "#.##"), 
               text_color=color.red, text_size=size.small)
    
    table.cell(info_table, 0, 5, "Price", text_color=color.white, text_size=size.small)
    table.cell(info_table, 1, 5, str.tostring(close, "#.##"), 
               text_color=color.orange, text_size=size.small)

// ============================================================================
// SETUP INSTRUCTIONS
// ============================================================================

// 1. Add this script to TradingView chart
// 2. Configure balance_percentage and leverage in settings
// 3. Create alerts:
//    - Alert Condition: "Buy Signal" or "Sell Signal"
//    - Message: {{strategy.order.alert_message}}
//    - Webhook URL: http://your-server/api/binance/advanced-trading-webhook
//    - Frequency: Once Per Bar Close
// 4. Enable the alert and start trading!
