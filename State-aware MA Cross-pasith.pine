// This Pine Script® code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © chikaharu

//@version=5
strategy("State-aware MA Cross Strategy", overlay=true, default_qty_type=strategy.percent_of_equity, default_qty_value=100)

// Binance Webhook Settings
quantity = input.float(0.20, "Order Quantity (% of equity)", minval=0.01, maxval=1.0, step=0.01, group="Binance Settings")
leverage = input.int(10, "Leverage", minval=1, maxval=125, group="Binance Settings")

// Use current chart symbol dynamically
symbol = syminfo.ticker

// === ユーザー設定（ここは固定された最適値） ===
s00_short = ta.ema(close, 15)
s00_long  = ta.hma(close, 24)

s01_short = ta.sma(close, 19)
s01_long  = ta.rma(close, 45)

s10_short = ta.rma(close, 16)
s10_long  = ta.hma(close, 59)

s11_short = ta.rma(close, 12)
s11_long  = ta.rma(close, 36)

// === 状態を定義 ===
base_ma = ta.ema(close, 20)
ma_slope = base_ma - base_ma[1]
above_ma = close > base_ma
slope_up = ma_slope > 0

state = slope_up ? (above_ma ? "11" : "10") : (above_ma ? "01" : "00")

// === 状態ごとにMA切り替え ===
short_ma = state == "00" ? s00_short :
           state == "01" ? s01_short :
           state == "10" ? s10_short :
                           s11_short

long_ma  = state == "00" ? s00_long :
           state == "01" ? s01_long :
           state == "10" ? s10_long :
                           s11_long

// === MACD設定 ===
[macd_line, signal_line, hist] = ta.macd(close, 12, 26, 9)
macd_bearish_cross = ta.crossunder(macd_line, signal_line)

// === EMA200設定 ===
ema200 = ta.ema(close, 200)
price_below_ema200 = close < ema200

// === ポジション状態管理 ===
var bool buy_signal_active = false
var bool close_signal_sent = false

// === クロス判定 ===
long_signal  = ta.crossover(short_ma, long_ma)
short_signal = ta.crossunder(short_ma, long_ma)

// MACD bearish cross condition for immediate close
macd_close_signal = buy_signal_active and not close_signal_sent and macd_bearish_cross

// EMA200 close condition for immediate close
ema200_close_signal = buy_signal_active and not close_signal_sent and price_below_ema200

// Calculate entry level
float entry_price = close

// === エントリー ===
if (long_signal)
    strategy.entry("Long", strategy.long, qty=quantity)
    buy_signal_active := true
    close_signal_sent := false

if (short_signal or macd_close_signal or ema200_close_signal)
    //strategy.entry("Short", strategy.short)
    strategy.close_all()
    buy_signal_active := false
    close_signal_sent := true

// JSON Alert Messages for Binance Webhook
buy_alert_message = '{"action": "buy", "symbol": "' + symbol + '", "quantity": "' + str.tostring(quantity) + '", "leverage": "' + str.tostring(leverage) + '", "entry": "' + str.tostring(math.round(entry_price, 8)) + '"}'

close_alert_message = '{"action": "close", "symbol": "' + symbol + '", "leverage": "' + str.tostring(leverage) + '", "entry": "' + str.tostring(math.round(entry_price, 8)) + '"}'

// === プロット ===
plot(short_ma, color=color.green, title="Short MA")
plot(long_ma, color=color.red, title="Long MA")
plot(ema200, color=color.blue, title="EMA200", linewidth=2)

// Alert Conditions for Binance Webhook
alertcondition(long_signal, title="Buy Signal", message="{{strategy.order.action}}")
alertcondition(short_signal or macd_close_signal or ema200_close_signal, title="Close Signal", message="{{strategy.order.action}}")
alertcondition(macd_close_signal, title="MACD Close Signal", message="{{strategy.order.action}}")
alertcondition(ema200_close_signal, title="EMA200 Close Signal", message="{{strategy.order.action}}")

// Custom Alert Messages
if long_signal and barstate.isconfirmed
    alert(buy_alert_message, alert.freq_once_per_bar)
    
if (short_signal or macd_close_signal or ema200_close_signal) and barstate.isconfirmed
    alert(close_alert_message, alert.freq_once_per_bar)